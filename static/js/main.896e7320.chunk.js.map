{"version":3,"sources":["logo.svg","components/Header.jsx","components/Button.jsx","components/Sidebar.jsx","components/Label.jsx","components/Swatch.jsx","components/View.jsx","components/Content.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","type","placeholder","Button","valueName","onClick","value","Sidebar","onClickRandom","onClickGroup","map","groupName","Label","text","label","htmlFor","style","Swatch","swatch","labels","swatches","setSwatches","setLabels","navRow","setNavRow","id","backgroundColor","View","width","Content","useState","colors","storage","get","currPageNum","pageSize","numPages","Math","ceil","length","slice","item","previousLabel","nextLabel","pageCount","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","activeClassName","disabledClassName","pageRangeDisplayed","onClickClear","e","newSwatches","height","fontSize","lineHeight","marginTop","console","log","push","target","borderColor","forEach","padding","App","i","color","random","toString","padStart","set","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,G,MAAA,IAA0B,kC,OCe1BA,EAbA,WACd,OACC,sBAAKC,UAAU,aAAf,UACC,qBAAKA,UAAU,QAAf,SACC,qBAAKC,IAAMC,EAAOF,UAAU,OAAOG,IAAI,WAExC,qBAAKH,UAAU,QAAf,SACC,uBAAOI,KAAK,OAAOJ,UAAU,aAAaK,YAAY,iB,uBCA3CC,EATA,SAAC,GAAqC,IAApCN,EAAmC,EAAnCA,UAAWO,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QACtC,OACC,uBAAOJ,KAAK,SACRJ,UAAYA,EACZS,MAAQF,EACRC,QAAUA,KCgBDE,EAnBC,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,aAGhC,OACC,sBAAKZ,UAAU,gBAAf,UACC,cAAC,EAAD,CACEA,UAAU,aACVO,UAAU,eACRC,QAAUG,GAHF,aAJE,CAAC,MAAM,SAAS,SAAS,QAAQ,OAAO,SAAS,QAAQ,QAQ5DE,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CACEd,UAAU,YACVO,UAAYO,EACVN,QAAUI,GAHA,QAAUE,UCJZC,EARD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACC,uBACAC,QAAUF,EACVG,MAAQF,EAAME,MAFd,SAEwBH,KCUXI,EAZA,SAAC,GAAqF,IAAnFC,EAAkF,EAAlFA,OAA+BC,GAAmD,EAA1EC,SAA0E,EAAhEC,YAAgE,EAAnDF,QAAsCd,GAAa,EAA3CiB,UAA2C,EAAhCC,OAAgC,EAAxBC,UAAwB,EAAbnB,SACtF,OACC,qBACAoB,GAAKP,EAAOQ,gBACZ7B,UAAU,SACVmB,MAAQE,EACRb,QAAUA,EAJV,SAKC,cAAC,EAAD,CAAgDQ,KAAOK,EAAOQ,gBAAkBZ,MAAQK,GAA3E,QAAUD,EAAOQ,oBCgBlBC,EAvBF,SAAC,GAA6E,IAA3EP,EAA0E,EAA1EA,SAAUC,EAAgE,EAAhEA,YAAaF,EAAmD,EAAnDA,OAAQG,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,UAAWnB,EAAa,EAAbA,QAC5E,OACC,sBAAKR,UAAU,aAAf,UACC,qBAAKA,UAAU,cAAf,SACEuB,EAASV,KAAI,SAACQ,GAAD,OACb,cAAC,EAAD,CACEA,OAASA,EACPE,SAAWA,EACfC,YAAcA,EACZF,OAASA,EACTG,UAAYA,EACZC,OAASA,EACTC,UAAYA,EACbnB,QAAUA,GARG,SAAWa,EAAOQ,gBAAkBR,EAAOU,YAW3D,qBAAK/B,UAAU,gBAAf,SACG0B,QC8GSM,EA3HC,WAEf,MAA4BC,mBAAS,CACpCL,GAAI,gBADL,mBAAON,EAAP,KAAeG,EAAf,KAIIS,EAASC,IAAQC,IAAI,aAErBC,EAAc,EACdC,EAAW,GACXC,EAAWC,KAAKC,KAAKP,EAAOQ,OAASJ,GACzC,EAAgCL,mBAASC,EAAOS,MAAM,EAAEL,GAAUzB,KAAI,SAAC+B,GAAD,MAAW,CAChFf,gBAAiBe,EAAKf,gBACtBE,MAAO,aAFR,mBAAOR,EAAP,KAAiBC,EAAjB,KAWA,EAA4BS,mBAC3B,cAAC,IAAD,CACCY,cAAgB,WAChBC,UAAY,OACZC,UAAYR,EACZS,aAXiB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpBZ,EAAcY,EACdzB,EAAYU,EAAOS,MAAML,EAAWD,EAC7BC,GAAYD,EAAc,MAShCa,mBAAqB,WACrBC,sBAAwB,mBACxBC,kBAAoB,eACpBC,gBAAkB,iBAClBC,kBAAoB,mBACpBC,mBAAqBhB,KAXvB,mBAAOb,EAAP,KAAeC,EAAf,KAsDM6B,EAAe,SAACC,GACrB,IAAIC,EAGJA,EAFWxB,EAAOS,MAAML,EAAWD,EAC9BC,GAAYD,EAAc,IACZxB,KAAI,SAAC+B,GAAD,MAAW,CACjCf,gBAAiBe,EAAKf,gBACtBE,MAAO,QACP4B,OAAQ,YAGTlC,EAAU,CACTN,MAAO,CACNyC,SAAU,SACVC,WAAY,OACZF,OAAQ,OACR5B,MAAO,OACP+B,UAAW,WAIbtC,EAAYkC,GACZK,QAAQC,IAAIzC,IAWb,OACC,sBAAKvB,UAAU,cAAf,UACC,cAAC,EAAD,CAASW,cAVW,SAAC8C,KAWjB7C,aAPe,SAAC6C,OAQpB,cAAC,EAAD,CAAMlC,SAAWA,EACdC,YAAcA,EACfF,OAASA,EACTG,UAAYA,EACZC,OAASA,EACTC,UAAYA,EACVnB,QAjFgB,SAACiD,GACtB,IAAIC,EAAc,GAClBA,EAAYO,KAAK,CAChBpC,gBAAiB4B,EAAES,OAAOtC,GAC1BG,MAAO,OACP4B,OAAQ,QACRQ,YAAa,UAEd5C,EAAS6C,SAAQ,SAAA/C,GAAM,OAAIqC,EAAYO,KAAK,CAC3CpC,gBAAiBR,EAAOQ,gBACxBE,MAAO,QACP4B,OAAQ,aAGTnC,EAAYkC,EAAYf,MAAM,EAAE,IAEhClB,EAAU,CACTN,MAAO,CACN0C,WAAY,OACZF,OAAQ,OACRG,UAAW,QACXO,QAAS,iBAIX1C,EACC,uBAAOvB,KAAK,SAASJ,UAAU,YAAYS,MAAM,QAAQD,QAAUgD,YC3CvDc,MArBf,WAEC,GAAiC,OAA7BnC,IAAQC,IAAI,aAAuB,CAGtC,IAFA,IAAIF,EAAS,GAEJqC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC7B,IAAIC,EAAQ,KAAqB,SAAhBhC,KAAKiC,UAAuB,GAAGC,SAAS,IAAIC,SAAS,EAAG,KACzEzC,EAAO+B,KAAK,CAAEpC,gBAAiB2C,IAGhCrC,IAAQyC,IAAI,YAAa1C,GAG1B,OACC,sBAAKlC,UAAU,wBAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,QCTY6E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.896e7320.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5a22712c.svg\";","import logo from '../logo.svg';\n\nconst Header = () => {\n\treturn (\n\t\t<div className=\"row header\">\n\t\t\t<div className=\"col-9\">\n\t\t\t\t<img src={ logo } className=\"logo\" alt=\"logo\" />\n\t\t\t</div>\n\t\t\t<div className=\"col-3\">\n\t\t\t\t<input type=\"text\" className=\"search_bar\" placeholder=\"Search\"></input>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Header\n","const Button = ({className, valueName, onClick}) => {\n\treturn (\n\t\t<input type=\"button\"\n\t\t\t   className={ className }\n\t\t\t   value={ valueName }\n\t\t\t   onClick={ onClick }/>\n\t)\n}\n\nexport default Button\n","import Button  from './Button'\n\nconst Sidebar = ({onClickRandom, onClickGroup}) => {\n\tlet groupList = ['Red','Orange','Yellow','Green','Blue','Purple','Brown','Gray']\n\n\treturn (\n\t\t<div className=\"col-3 sidebar\">\n\t\t\t<Button key=\"btnRandom\"\n\t\t\t  className=\"random_btn\"\n\t\t\t  valueName=\"Random Color\"\n\t\t\t    onClick={ onClickRandom }/>\n\t\t\t{groupList.map((groupName) => (\n\t\t\t<Button key={ 'group' + groupName }\n\t\t\t  className=\"group_btn\"\n\t\t\t  valueName={ groupName }\n\t\t\t    onClick={ onClickGroup}/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default Sidebar\n","const Label = ({ text, label }) => {\n\treturn (\n\t\t<label\n\t\thtmlFor={ text }\n\t\tstyle={ label.style }>{ text }</label>\n\t)\n}\n\nexport default Label\n","import Label from './Label'\n\nconst Swatch = ({ swatch, swatches, setSwatches, labels, setLabels, navRow, setNavRow, onClick}) => {\n\treturn (\n\t\t<div\n\t\tid={ swatch.backgroundColor }\n\t\tclassName=\"swatch\"\n\t\tstyle={ swatch }\n\t\tonClick={ onClick }>\n\t\t\t<Label key={ 'label' + swatch.backgroundColor } text={ swatch.backgroundColor } label={ labels }/>\n\t\t</div>\n\t)\n}\n\nexport default Swatch\n","import Swatch from './Swatch'\n\nconst View = ({ swatches, setSwatches, labels, setLabels, navRow, setNavRow, onClick}) => {\n\treturn (\n\t\t<div className=\"col-9 view\">\n\t\t\t<div className=\"col-12 page\">\n\t\t\t\t{swatches.map((swatch) => (\n\t\t\t\t\t<Swatch key={ \"swatch\" + swatch.backgroundColor + swatch.width }\n\t\t\t\t\t\t swatch={ swatch }\n\t\t\t \t\t   swatches={ swatches }\n\t\t\t\t\tsetSwatches={ setSwatches }\n\t\t\t\t\t\t labels={ labels }\n\t\t\t\t\t  setLabels={ setLabels }\n\t\t\t\t\t\t navRow={ navRow }\n\t\t\t\t\t  setNavRow={ setNavRow }\n\t\t\t\t\t\tonClick={ onClick }/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"col-12 navrow\">\n\t\t\t\t{ navRow }\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default View\n","import storage from 'local-storage'\nimport { useState } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport Sidebar from './Sidebar'\nimport View  from './View'\n\nconst Content = () => {\n\n\tconst [labels, setLabels] = useState({\n\t\tid: 'placeholder'\n\t})\n\n\tlet colors = storage.get('colorList')\n\n\tlet currPageNum = 0;\n\tlet pageSize = 12;\n\tlet numPages = Math.ceil(colors.length / pageSize);\n\tconst [swatches, setSwatches] = useState(colors.slice(0,pageSize).map((item) => ({\n\t\tbackgroundColor: item.backgroundColor,\n\t\twidth: '220px'\n\t})))\n\n\tconst selectPage = ({selected}) => {\n\t\tcurrPageNum = selected\n\t\tsetSwatches(colors.slice(pageSize * currPageNum,\n\t\t\t\t\t\t\t\t pageSize * (currPageNum + 1)));\n\t}\n\n\tconst [navRow, setNavRow] = useState(\n\t\t<ReactPaginate\n\t\t\tpreviousLabel={ 'Previous' }\n\t\t\tnextLabel={ 'Next' }\n\t\t\tpageCount={ numPages }\n\t\t\tonPageChange={ selectPage }\n\t\t\tcontainerClassName={ 'paginate' }\n\t\t\tpreviousLinkClassName={ 'paginatePrevious' }\n\t\t\tnextLinkClassName={ 'paginateNext' }\n\t\t\tactiveClassName={ 'paginateActive'}\n\t\t\tdisabledClassName={ 'paginateDisabled' }\n\t\t\tpageRangeDisplayed={ numPages }\n\t\t/>\n\t)\n\n\tconst onClickDetail = (e) => {\n\t\tlet newSwatches = []\n\t\tnewSwatches.push({\n\t\t\tbackgroundColor: e.target.id,\n\t\t\twidth: '100%',\n\t\t\theight: '650px',\n\t\t\tborderColor: 'black'\n\t\t})\n\t\tswatches.forEach(swatch => newSwatches.push({\n\t\t\tbackgroundColor: swatch.backgroundColor,\n\t\t\twidth: '176px',\n\t\t\theight: '176px'\n\t\t}))\n\n\t\tsetSwatches(newSwatches.slice(0,6))\n\n\t\tsetLabels({\n\t\t\tstyle: {\n\t\t\t\tlineHeight: '65px',\n\t\t\t\theight: '65px',\n\t\t\t\tmarginTop: '110px',\n\t\t\t\tpadding: '0rem 1.0rem'\n\t\t\t}\n\t\t})\n\n\t\tsetNavRow(\n\t\t\t<input type=\"button\" className=\"clear_btn\" value=\"Clear\" onClick={ onClickClear }/>\n\t\t)\n\n\t\t// setLabels({\n\t\t// \tfontSize: '4rem',\n\t\t// \tlineHeight: '150px',\n\t\t// \theight: '150px',\n\t\t// \tmarginTop: '498px',\n\t\t// \tpadding: '0rem 4.5rem'\n\t\t// })\n\t}\n\n\n\tconst onClickClear = (e) => {\n\t\tlet newSwatches = []\n\t\tlet page = colors.slice(pageSize * currPageNum,\n\t\t\t\t\t\t\tpageSize * (currPageNum + 1))\n\t\tnewSwatches = page.map((item) => ({\n\t\t\tbackgroundColor: item.backgroundColor,\n\t\t\twidth: '220px',\n\t\t\theight: '258px'\n\t\t}))\n\n\t\tsetLabels({\n\t\t\tstyle: {\n\t\t\t\tfontSize: '1.5rem',\n\t\t\t\tlineHeight: '50px',\n\t\t\t\theight: '50px',\n\t\t\t\twidth: '100%',\n\t\t\t\tmarginTop: '207px'\n\t\t\t}\n\t\t})\n\n\t\tsetSwatches(newSwatches)\n\t\tconsole.log(swatches)\n\t}\n\n\tconst onClickRandom = (e) => {\n\t\t// to be implemented\n\t}\n\n\tconst onClickGroup = (e) => {\n\t\t// to be implemented\n\t}\n\n\treturn (\n\t\t<div className=\"row content\">\n\t\t\t<Sidebar onClickRandom={ onClickRandom }\n\t\t\t\t\t  onClickGroup={ onClickGroup }/>\n\t\t\t<View swatches={ swatches }\n\t\t\t   setSwatches={ setSwatches }\n\t\t\t\t\tlabels={ labels }\n\t\t\t\t setLabels={ setLabels }\n\t\t\t\t\tnavRow={ navRow }\n\t\t\t\t setNavRow={ setNavRow }\n\t\t\t\t   onClick={ onClickDetail }/>\n\t\t</div>\n\t)\n}\n\nexport default Content\n","import storage from 'local-storage'\nimport './App.css';\nimport Header  from './components/Header'\nimport Content from './components/Content'\n\nfunction App() {\n\n\tif (storage.get('colorList') === null) {\n\t\tlet colors = [];\n\n\t\tfor (let i = 0; i < 120; i++) {\n\t\t\tlet color = '#'+(Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0');\n\t\t\tcolors.push({ backgroundColor: color});\n\t\t}\n\n\t\tstorage.set('colorList', colors)\n\t}\n\n\treturn (\n\t\t<div className=\"container-fluid h-100\">\n\t\t\t<Header/>\n\t\t\t<Content/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}