{"version":3,"sources":["logo.svg","components/Header.jsx","components/Button.jsx","components/Sidebar.jsx","components/Label.jsx","components/Swatch.jsx","components/View.jsx","components/Content.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","searchQuery","setSearchQuery","onChange","className","src","logo","alt","type","placeholder","Button","valueName","onClick","value","Sidebar","onClickRandom","onClickGroup","map","groupName","Label","label","id","text","htmlFor","style","Swatch","swatch","labels","swatches","setSwatches","setLabels","navRow","setNavRow","filter","item","backgroundColor","View","width","Content","onClickDetail","App","storage","get","colors","i","color","Math","random","toString","padStart","push","set","generateColors","allColors","useState","setColors","currPageNum","pageSize","numPages","ceil","length","slice","fontSize","lineHeight","marginTop","padding","paginate","previousLabel","nextLabel","pageCount","onPageChange","selected","newColors","newSwatches","newLabels","forEach","containerClassName","previousLinkClassName","nextLinkClassName","activeClassName","disabledClassName","pageRangeDisplayed","e","target","height","borderColor","detailLabel","onClickClear","page","includes","x","floor","randomSwatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02f5073a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5a22712c.svg\";","import logo from '../logo.svg';\n\nconst Header = ({searchQuery, setSearchQuery, onChange}) => {\n\n\treturn (\n\t\t<div className=\"row header\">\n\t\t\t<div className=\"col-9\">\n\t\t\t\t<img src={ logo } className=\"logo\" alt=\"logo\" />\n\t\t\t</div>\n\t\t\t<div className=\"col-3\">\n\t\t\t\t<input type=\"text\" className=\"search_bar\" placeholder=\"Search\" onChange={ onChange }></input>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Header\n","const Button = ({className, valueName, onClick}) => {\n\treturn (\n\t\t<input type=\"button\"\n\t\t\t   className={ className }\n\t\t\t   value={ valueName }\n\t\t\t   onClick={ onClick }/>\n\t)\n}\n\nexport default Button\n","import Button  from './Button'\n\nconst Sidebar = ({onClickRandom, onClickGroup}) => {\n\tlet groupList = ['Red','Orange','Yellow','Green','Blue','Purple','Brown','Gray']\n\n\treturn (\n\t\t<div className=\"col-3 sidebar\">\n\t\t\t<Button key=\"btnRandom\"\n\t\t\t  className=\"random_btn\"\n\t\t\t  valueName=\"Random Color\"\n\t\t\t    onClick={ onClickRandom }/>\n\t\t\t{groupList.map((groupName) => (\n\t\t\t<Button key={ 'group' + groupName }\n\t\t\t  className=\"group_btn\"\n\t\t\t  valueName={ groupName }\n\t\t\t    onClick={ onClickGroup}/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default Sidebar\n","const Label = ({ label }) => {\n\treturn (\n\t\t<label\n\t\tid={ 'label' + label.text }\n\t\thtmlFor={ label.text }\n\t\tstyle={ label.style }>{ label.text }</label>\n\t)\n}\n\nexport default Label\n","import Label from './Label'\n\nconst Swatch = ({ swatch, swatches, setSwatches, labels, setLabels, navRow, setNavRow, onClick}) => {\n\tlet label = labels.filter(item => item.text === swatch.backgroundColor)[0]\n\n\treturn (\n\t\t<div\n\t\tid={ swatch.backgroundColor }\n\t\tclassName=\"swatch\"\n\t\tstyle={ swatch }\n\t\tonClick={ onClick }>\n\t\t\t<Label key={ 'label' + label.text } label={ label }/>\n\t\t</div>\n\t)\n}\n\nexport default Swatch\n","import Swatch from './Swatch'\n\nconst View = ({ swatches, setSwatches, labels, setLabels, navRow, setNavRow, onClick }) => {\n\treturn (\n\t\t<div className=\"col-9 view\">\n\t\t\t<div className=\"col-12 page\">\n\t\t\t\t{swatches.map((swatch) => (\n\t\t\t\t\t<Swatch key={ \"swatch\" + swatch.backgroundColor + swatch.width }\n\t\t\t\t\t\t swatch={ swatch }\n\t\t\t \t\t   swatches={ swatches }\n\t\t\t\t\tsetSwatches={ setSwatches }\n\t\t\t\t\t\t labels={ labels }\n\t\t\t\t\t  setLabels={ setLabels }\n\t\t\t\t\t\t navRow={ navRow }\n\t\t\t\t\t  setNavRow={ setNavRow }\n\t\t\t\t\t\tonClick={ onClick }/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"col-12 navrow\">\n\t\t\t\t{ navRow }\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default View\n","import Sidebar from './Sidebar'\nimport View  from './View'\n\nconst Content = ({swatches, setSwatches, labels, setLabels, navRow, setNavRow, onClickRandom, onClickGroup, onClickDetail}) => {\n\n\treturn (\n\t\t<div className=\"row content\">\n\t\t\t<Sidebar onClickRandom={ onClickRandom }\n\t\t\t\t\t  onClickGroup={ onClickGroup }/>\n\t\t\t<View swatches={ swatches }\n\t\t\t   setSwatches={ setSwatches }\n\t\t\t\t\tlabels={ labels }\n\t\t\t\t setLabels={ setLabels }\n\t\t\t\t\tnavRow={ navRow }\n\t\t\t\t setNavRow={ setNavRow }\n\t\t\t\t   onClick={ onClickDetail }/>\n\t\t</div>\n\t)\n}\n\nexport default Content\n","import storage from 'local-storage'\nimport './App.css';\nimport { useState } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport Header  from './components/Header'\nimport Content from './components/Content'\nimport Button  from './components/Button'\n\nfunction generateColors() {\n\tif (storage.get('colorList') === null) {\n\t\tlet colors = [];\n\n\t\tfor (let i = 0; i < 120; i++) {\n\t\t\tlet color = '#'+(Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0');\n\t\t\tcolors.push({ backgroundColor: color});\n\t\t}\n\n\t\tstorage.set('colorList', colors)\n\t}\n}\n\nfunction App() {\n\tgenerateColors()\n\tlet allColors = storage.get('colorList')\n\tconst [colors, setColors] = useState(allColors)\n\n\tlet currPageNum = 0;\n\tlet pageSize = 12;\n\tlet numPages = Math.ceil(colors.length / pageSize);\n\tconst [swatches, setSwatches] = useState(colors.slice(0,pageSize).map((item) => ({\n\t\tbackgroundColor: item.backgroundColor,\n\t\twidth: '220px'\n\t})))\n\n\tconst [labels, setLabels] = useState(swatches.map((item) => ({\n\t\ttext: item.backgroundColor,\n\t\tstyle: {\n\t\t\tfontSize: '1.5rem',\n\t\t\tlineHeight: '50px',\n\t\t\tmarginTop: '207px',\n\t\t\tpadding: '0rem 1.5rem'\n\t\t}\n\t})))\n\n\tconst [searchQuery, setSearchQuery] = useState('')\n\n\tconst onChangeSearch = (e) => {\n\t\tsetSearchQuery(e.target.value)\n\t\tif (searchQuery !== '') {\n\t\t\tsetColors(allColors.filter(color => color.backgroundColor.includes(searchQuery)))\n\t\t} else {\n\t\t\tsetColors(allColors)\n\t\t}\n\t\tsetSwatches(colors.slice(0,pageSize).map((item) => ({\n\t\t\tbackgroundColor: item.backgroundColor,\n\t\t\twidth: '220px'\n\t\t})))\n\t\tsetLabels(colors.map((item) => ({\n\t\t\ttext: item.backgroundColor,\n\t\t\tstyle: {\n\t\t\t\tfontSize: '1.5rem',\n\t\t\t\tlineHeight: '50px',\n\t\t\t\tmarginTop: '207px',\n\t\t\t\tpadding: '0rem 1.5rem'\n\t\t\t}\n\t\t})))\n\t}\n\n\tconst selectPage = ({selected}) => {\n\t\tcurrPageNum = selected\n\t\tlet newColors = colors.slice(pageSize * currPageNum,\n\t\t\t\t\t\t\t\t\t pageSize * (currPageNum + 1));\n\t\tlet newSwatches = []\n\t\tlet newLabels = []\n\t\tnewColors.forEach((color) => newSwatches.push({\n\t\t\tbackgroundColor: color.backgroundColor,\n\t\t\twidth: '220px'\n\t\t}))\n\n\t\tnewColors.forEach((color) => newLabels.push({\n\t\t\ttext: color.backgroundColor,\n\t\t\tstyle: {\n\t\t\t\tfontSize: '1.5rem',\n\t\t\t\tlineHeight: '50px',\n\t\t\t\tmarginTop: '207px',\n\t\t\t\tpadding: '0rem 1.5rem'\n\t\t\t}\n\t\t}))\n\n\t\tsetSwatches(newSwatches)\n\t\tsetLabels(newLabels)\n\t}\n\n\tconst paginate = (\n\t\t<ReactPaginate\n\t\t\tpreviousLabel={ 'Previous' }\n\t\t\tnextLabel={ 'Next' }\n\t\t\tpageCount={ numPages }\n\t\t\tonPageChange={ selectPage }\n\t\t\tcontainerClassName={ 'paginate' }\n\t\t\tpreviousLinkClassName={ 'paginatePrevious' }\n\t\t\tnextLinkClassName={ 'paginateNext' }\n\t\t\tactiveClassName={ 'paginateActive'}\n\t\t\tdisabledClassName={ 'paginateDisabled' }\n\t\t\tpageRangeDisplayed={ numPages }\n\t\t/>\n\t)\n\n\tconst [navRow, setNavRow] = useState(paginate)\n\n\tconst onClickDetail = (e) => {\n\n\t\tlet newSwatches = []\n\t\tnewSwatches.push({\n\t\t\tbackgroundColor: e.target.id,\n\t\t\twidth: '100%',\n\t\t\theight: '650px',\n\t\t\tborderColor: 'black'\n\t\t})\n\t\tlet restSwatches = swatches.filter(item => item.backgroundColor !== e.target.id)\n\n\t\trestSwatches.forEach(item => newSwatches.push({\n\t\t\tbackgroundColor: item.backgroundColor,\n\t\t\twidth: '176px',\n\t\t\theight: '176px'\n\t\t}))\n\n\t\tsetSwatches(newSwatches.slice(0,6))\n\n\t\tlet newLabels = []\n\n\t\tlet detailLabel = [{\n\t\t\ttext: e.target.id,\n\t\t\tstyle: {\n\t\t\t\tfontSize: '4rem',\n\t\t\t\tlineHeight: '150px',\n\t\t\t\theight: '150px',\n\t\t\t\tmarginTop: '498px',\n\t\t\t\tpadding: '0rem 4.5rem'\n\t\t\t}\n\t\t}]\n\n\t\tnewLabels.push(detailLabel[0])\n\n\t\tlet restLabels = labels.filter(item => item.text !== e.target.id)\n\n\t\trestLabels.forEach(label => newLabels.push({\n\t\t\ttext: label.text,\n\t\t\tstyle: {\n\t\t\t\tlineHeight: '65px',\n\t\t\t\theight: '65px',\n\t\t\t\tmarginTop: '110px',\n\t\t\t\tpadding: '0rem 1.0rem'\n\t\t\t}\n\t\t}))\n\n\t\tsetLabels(newLabels.slice(0,6))\n\n\t\tsetNavRow(\n\t\t\t<Button key=\"btnClear\"\n\t\t\t  className=\"clear_btn\"\n\t\t\t  valueName=\"Clear\"\n\t\t\t\tonClick={ onClickClear } />\n\n\t\t)\n\t}\n\n\n\tconst onClickClear = (e) => {\n\t\tlet newSwatches = []\n\t\tlet page = colors.slice(pageSize * currPageNum,\n\t\t\t\t\t\t\t\tpageSize * (currPageNum + 1))\n\t\tnewSwatches = page.map((item) => ({\n\t\t\tbackgroundColor: item.backgroundColor,\n\t\t\twidth: '220px',\n\t\t\theight: '258px'\n\t\t}))\n\n\t\tlet newLabels = []\n\t\tnewLabels = page.map((item) => ({\n\t\t\ttext: item.backgroundColor,\n\t\t\tstyle: {\n\t\t\t\tfontSize: '1.5rem',\n\t\t\t\tlineHeight: '50px',\n\t\t\t\theight: '50px',\n\t\t\t\twidth: '100%',\n\t\t\t\tmarginTop: '207px'\n\t\t}}))\n\n\t\tsetSwatches(newSwatches)\n\t\tsetLabels(newLabels)\n\t\tsetNavRow(paginate)\n\t}\n\n\tconst onClickRandom = (e) => {\n\t\tlet x = Math.floor(Math.random() * swatches.length)\n\t\tlet randomSwatch = {\n\t\t\ttarget: {\n\t\t\t\tid: swatches[x].backgroundColor\n\t\t\t}\n\t\t}\n\t\tonClickDetail(randomSwatch)\n\t}\n\n\tconst onClickGroup = (e) => {\n\t\t// to be implemented\n\t}\n\n\treturn (\n\t\t<div className=\"container-fluid h-100\">\n\t\t\t<Header searchQuery={ searchQuery }\n\t\t\t\t setSearchQuery={ setSearchQuery }\n\t\t\t\t \t   onChange={ onChangeSearch } />\n\t\t\t<Content swatches={ swatches }\n\t\t\t\t  setSwatches={ setSwatches }\n\t\t\t\t  \t   labels={ labels }\n\t\t\t\t\tsetLabels={ setLabels }\n\t\t\t\t\t   navRow={ navRow }\n\t\t\t\t\tsetNavRow={ setNavRow }\n\t\t\t\tonClickRandom={ onClickRandom }\n\t\t\t\t onClickGroup={ onClickGroup }\n\t\t\t\tonClickDetail={ onClickDetail }/>\n\t\t</div>\n\t);\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}