{"version":3,"sources":["logo.svg","components/Header.jsx","components/Sidebar.jsx","components/Label.jsx","components/Swatch.jsx","components/View.jsx","components/Content.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","type","placeholder","Sidebar","value","Label","hexCode","labelState","htmlFor","style","Swatch","swatchState","view","setView","useState","backgroundColor","label","setLabel","id","onClick","e","newView","push","target","width","height","borderColor","forEach","swatch","slice","lineHeight","marginTop","padding","View","colors","i","color","Math","random","toString","padStart","numPages","ceil","length","map","previousLabel","nextLabel","pageCount","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","activeClassName","disabledClassName","pageRangeDisplayed","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9430601b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5a22712c.svg\";","import logo from '../logo.svg';\n\nconst Header = () => {\n\treturn (\n\t\t<div className=\"row header\">\n\t\t\t<div className=\"col-9\">\n\t\t\t\t<img src={ logo } className=\"logo\" alt=\"logo\" />\n\t\t\t</div>\n\t\t\t<div className=\"col-3\">\n\t\t\t\t<input type=\"text\" className=\"search_bar\" placeholder=\"Search\"></input>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Header\n","const Sidebar = () => {\n\treturn (\n\t\t<div className=\"col-3 sidebar\">\n\t\t\t<input type=\"button\" className=\"random_btn\" value=\"Random Color\" />\n\t\t\t<input type=\"button\" className=\"group_btn\" value=\"Red\" />\n\t\t\t<input type=\"button\" className=\"group_btn\" value=\"Orange\" />\n\t\t\t<input type=\"button\" className=\"group_btn\" value=\"Yellow\" />\n\t\t\t<input type=\"button\" className=\"group_btn\" value=\"Green\" />\n\t\t\t<input type=\"button\" className=\"group_btn\" value=\"Blue\" />\n\t\t\t<input type=\"button\" className=\"group_btn\" value=\"Purple\" />\n\t\t\t<input type=\"button\" className=\"group_btn\" value=\"Brown\" />\n\t\t\t<input type=\"button\" className=\"group_btn\" value=\"Gray\" />\n\t\t</div>\n\t)\n}\n\nexport default Sidebar\n","import { useState } from 'react'\n\nconst Label = ({ hexCode, labelState }) => {\n\treturn (\n\t\t<label\n\t\tkey={ hexCode + 'label'}\n\t\thtmlFor={ hexCode }\n\t\tstyle={ labelState }>{ hexCode }</label>\n\t)\n}\n\nexport default Label\n","\nimport { useState } from 'react'\nimport Label from './Label'\n\n\nconst Swatch = ({ swatchState, view, setView }) => {\n\tconst [label, setLabel] = useState({\n\t\thexCode: swatchState.backgroundColor\n\t})\n\n\tconst onClick = (e) => {\n\t\tlet newView = []\n\t\tnewView.push({\n\t\t\tbackgroundColor: e.target.id,\n\t\t\twidth: '100%',\n\t\t\theight: '650px',\n\t\t\tborderColor: 'black'\n\t\t})\n\t\tview.forEach(swatch => newView.push({\n\t\t\tbackgroundColor: swatch.backgroundColor,\n\t\t\twidth: '176px',\n\t\t\theight: '176px'\n\t\t}))\n\n\t\tsetView(newView.slice(0,6))\n\t\tsetLabel({\n\t\t\tlineHeight: '65px',\n\t\t\theight: '65px',\n\t\t\tmarginTop: '110px',\n\t\t\tpadding: '0rem 1.0rem'\n\t\t})\n\t\t// setLabel({\n\t\t// \tfontSize: '4rem',\n\t\t// \tlineHeight: '150px',\n\t\t// \theight: '150px',\n\t\t// \tmarginTop: '498px',\n\t\t// \tpadding: '0rem 4.5rem'\n\t\t// })\n\t}\n\treturn (\n\t\t<div\n\t\tkey={ swatchState.backgroundColor }\n\t\tid={ swatchState.backgroundColor }\n\t\tclassName=\"swatch\"\n\t\tstyle={ swatchState }\n\t\tonClick={ onClick }>\n\t\t\t<Label labelState={ label } hexCode={ swatchState.backgroundColor }/>\n\t\t</div>\n\t)\n}\n\nexport default Swatch\n","import { useState } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport Swatch from './Swatch'\n\nconst View = () => {\n\n\tlet colors = [];\n\n\tfor (let i = 0; i < 120; i++) {\n\t\tlet color = '#'+(Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0');\n\t\tcolors.push({ backgroundColor: color});\n\t}\n\n\tlet pageSize = 12;\n\tlet numPages = Math.ceil(colors.length / pageSize);\n\tconst [view, setView] = useState(colors.slice(0, pageSize));\n\n\tconst selectPage = ({selected}) => {\n\t\tsetView(colors.slice(pageSize * selected,\n\t\t\t\t\t\t\t\t pageSize * (selected + 1)));\n\t}\n\n\treturn (\n\t\t<div className=\"col-9 view\">\n\t\t\t<div className=\"col-12 page\">\n\t\t\t\t{view.map((swatchState) => (\n\t\t\t\t\t<Swatch swatchState={ swatchState } view={ view } setView={ setView }/>\n\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"col-12\">\n\t\t\t\t<ReactPaginate\n\t\t\t\t\tpreviousLabel={ 'Previous' }\n\t\t\t\t\tnextLabel={ 'Next' }\n\t\t\t\t\tpageCount={ numPages }\n\t\t\t\t\tonPageChange={ selectPage }\n\t\t\t\t\tcontainerClassName={ 'paginate' }\n\t\t\t\t\tpreviousLinkClassName={ 'paginatePrevious' }\n\t\t\t\t\tnextLinkClassName={ 'paginateNext' }\n\t\t\t\t\tactiveClassName={ 'paginateActive'}\n\t\t\t\t\tdisabledClassName={ 'paginateDisabled' }\n\t\t\t\t\tpageRangeDisplayed='10'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default View\n","import Sidebar from './Sidebar'\nimport View  from './View'\n\nconst Content = () => {\n\treturn (\n\t\t<div className=\"row content\">\n\t\t\t<Sidebar/>\n\t\t\t<View/>\n\t\t</div>\n\t)\n}\n\nexport default Content\n","import './App.css';\nimport Header  from './components/Header'\nimport Content from './components/Content'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container-fluid h-100\">\n\t\t\t<Header/>\n\t\t\t<Content/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}